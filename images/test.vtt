WEBVTT

1
00:00:00.000 --> 00:00:01.400
台湾大学人工智慧中心
科技部人工智慧技术暨全幅健康照护联合研究中心
http://aintu.tw

2
00:00:01.400 --> 00:00:02.920
台湾大学人工智慧中心
科技部人工智慧技术暨全幅健康照护联合研究中心
http://aintu.tw

3
00:00:02.920 --> 00:00:03.420
台湾大学人工智慧中心
科技部人工智慧技术暨全幅健康照护联合研究中心
http://aintu.tw

4
00:00:03.420 --> 00:00:09.860
台湾大学人工智慧中心
科技部人工智慧技术暨全幅健康照护联合研究中心
http://aintu.tw

5
00:00:09.860 --> 00:00:13.515
这一门课，我们预期可以学到甚麽呢  ?

6
00:00:13.515 --> 00:00:16.475
我想很多同学心理的预期就是 :

7
00:00:16.475 --> 00:00:19.655
"你可以学到一个很潮的人工智慧"

8
00:00:19.655 --> 00:00:23.365
我知道从今年开始，"人工智慧"这个词，

9
00:00:23.365 --> 00:00:26.375
突然变得非常非常非常的

10
00:00:26.375 --> 00:00:29.255
热门

11
00:00:29.255 --> 00:00:32.065
大家,政府,internship,通通都在讲"人工智慧"这个词

12
00:00:32.065 --> 00:00:34.585
但人工智慧是甚麽呢?

13
00:00:34.585 --> 00:00:37.465
人工智慧其实一点都不是新的词彙

14
00:00:37.465 --> 00:00:41.680
人工智慧这个词，AI这个词，artificial intelligence这个词

15
00:00:41.680 --> 00:00:42.180
在1950年代，

16
00:00:42.180 --> 00:00:44.085
就有了!

17
00:00:44.085 --> 00:00:46.895
这个词意味著甚麽呢?

18
00:00:46.895 --> 00:00:51.740
这个词意味著人类长远以来的目标 : 希望机器可以跟人

19
00:00:51.740 --> 00:00:52.475
一样的聪明。

20
00:00:52.475 --> 00:00:55.355
在科幻小说裡面，

21
00:00:55.355 --> 00:00:58.215
我们看到很多的幻想和期待。

22
00:00:58.215 --> 00:01:01.335
在很长的一段时间内，人们并不知道怎麽做到

23
00:01:01.335 --> 00:01:04.765
人工智慧这件事情。

24
00:01:04.765 --> 00:01:07.635
直到后来，大概1980年代以后，

25
00:01:07.635 --> 00:01:09.635
有了机器学习的方法。

26
00:01:09.635 --> 00:01:10.195
机器学习，

27
00:01:10.195 --> 00:01:13.215
顾名思义，从名词就可以猜出

28
00:01:13.215 --> 00:01:16.140
就是让机器具有学习的能力。

29
00:01:16.140 --> 00:01:19.215
机器学习跟人工智慧有甚麽关系呢?

30
00:01:19.215 --> 00:01:21.215
人工智慧

31
00:01:21.215 --> 00:01:22.175
是我们想要达成的目标 ;

32
00:01:22.175 --> 00:01:25.165
而机器学习，

33
00:01:25.165 --> 00:01:25.665
是想要

34
00:01:25.665 --> 00:01:26.165
达成目标

35
00:01:26.165 --> 00:01:29.745
的手段! 让机器透过学习的方式

36
00:01:29.745 --> 00:01:32.895
它可以跟人一样聪明。

37
00:01:32.895 --> 00:01:35.625
而深度学习和机器学习有甚麽关系呢?

38
00:01:35.625 --> 00:01:36.125
深度学习就是

39
00:01:36.125 --> 00:01:40.355
机器学习的其中一种方法。

40
00:01:40.355 --> 00:01:43.345
在有深度学习机器学习之前，

41
00:01:43.345 --> 00:01:45.345
人们用什麽样的方式，

42
00:01:45.345 --> 00:01:46.700
来做到人工智慧

43
00:01:46.700 --> 00:01:48.485
这件事呢?

44
00:01:48.485 --> 00:01:50.485
我记得高中生物学的

45
00:01:50.485 --> 00:01:51.895
告诉我们说，

46
00:01:51.895 --> 00:01:54.625
生物的行为取决于两件事 :

47
00:01:54.625 --> 00:01:56.735
"一个是后天学习的结果

48
00:01:56.735 --> 00:02:00.005
不是后天学习的结果就是先天的本能。"

49
00:02:00.005 --> 00:02:02.905
这对机器来说也是一样，

50
00:02:02.905 --> 00:02:04.905
它怎麽样表现得很有智慧?

51
00:02:04.905 --> 00:02:05.885
要嘛就是透过后天学习的手段，

52
00:02:05.885 --> 00:02:08.995
表现得很有智慧；

53
00:02:08.995 --> 00:02:11.895
要嘛就是这是它先天的本能。

54
00:02:11.895 --> 00:02:14.295
机器为甚麽会有先天的本能?那个本能就是

55
00:02:14.295 --> 00:02:18.455
就是它的创造者，其实就是人类，帮它事先设定好。

56
00:02:18.455 --> 00:02:24.260
那麽我们先来看一下生物的本能

57
00:02:24.260 --> 00:02:27.865
讲一个跟机器学习一点都没关系的，我们来讲生物的本能

58
00:02:27.865 --> 00:02:29.865
这个是河狸。河狸的特色就是

59
00:02:29.865 --> 00:02:30.795
牠会

60
00:02:30.795 --> 00:02:34.775
筑水坝把水挡起来。

61
00:02:34.775 --> 00:02:37.545
但是河狸怎麽知道要筑水坝呢?

62
00:02:37.545 --> 00:02:40.885
河狸筑水坝的能力是天生的。

63
00:02:40.885 --> 00:02:41.400
也就是说，

64
00:02:41.400 --> 00:02:42.625
讲这个河狸是天生的，

65
00:02:42.625 --> 00:02:46.035
牠在实验室裡出生，牠没有父母教牠怎麽 筑水坝，

66
00:02:46.035 --> 00:02:46.535
但是

67
00:02:46.535 --> 00:02:48.405
牠一生下来，

68
00:02:48.405 --> 00:02:50.405
心裡就有一个衝动，就是牠想要

69
00:02:50.405 --> 00:02:53.695
筑水坝。

70
00:02:53.695 --> 00:02:56.715
如果我们用程式语言来描述牠的话，

71
00:02:56.715 --> 00:02:58.715
牠内建的程式语言是这样的

72
00:02:58.715 --> 00:03:01.605
:

73
00:03:01.605 --> 00:03:03.205
if 牠听到流水声

74
00:03:03.205 --> 00:03:07.405
then 牠就筑水坝直到听不到流水声为止

75
00:03:07.405 --> 00:03:10.675
所以生物学家就可以欺负河狸，

76
00:03:10.675 --> 00:03:13.795
他就用一个扬声器来播放流水声

77
00:03:13.795 --> 00:03:18.325
如果把扬声器放在水泥牆裡面，

78
00:03:18.325 --> 00:03:21.335
河狸就会在水泥牆上面

79
00:03:21.335 --> 00:03:23.335
放很多的树枝，

80
00:03:23.335 --> 00:03:24.275
在水泥牆上筑一个堤，

81
00:03:24.275 --> 00:03:27.355
然后想要把扬声器的声音盖住

82
00:03:27.355 --> 00:03:30.145
如果把扬声器放在地上，

83
00:03:30.145 --> 00:03:34.135
河狸就会用树枝把它盖住，直到听不到扬声器的声音为止

84
00:03:34.135 --> 00:03:36.935
所以这是 生物的本能。

85
00:03:36.935 --> 00:03:40.125
那机器的本能跟生物的本能其实很像:

86
00:03:40.125 --> 00:03:43.375
假设有一天，你想要做一个chat-bot

87
00:03:43.375 --> 00:03:46.405
如果你不是用learning的方式，也不是用机器学习的方式，

88
00:03:46.405 --> 00:03:49.765
而是给它天生的本能的话，

89
00:03:49.765 --> 00:03:52.695
那像是甚麽样子呢?你可能会在这个chat-bot裡面，

90
00:03:52.695 --> 00:03:55.885
在这个聊天机器人裡面，

91
00:03:55.885 --> 00:03:58.855
设定一些规则，这些规则我们通常称之为hand-crafted rules

92
00:03:58.855 --> 00:04:02.455
就是人设定的规则。

93
00:04:02.455 --> 00:04:03.705
假设你今天要

94
00:04:03.705 --> 00:04:06.465
设定一个对话机器人，

95
00:04:06.465 --> 00:04:09.795
它可以帮你打开和关掉音乐的话，那你的做法可能是这样:

96
00:04:09.795 --> 00:04:13.625
设定一条规则，就是写程式这样，

97
00:04:13.625 --> 00:04:14.420
如果

98
00:04:14.420 --> 00:04:16.905
输入的句子裡面，

99
00:04:16.905 --> 00:04:18.595
看到turn off这个词彙，

100
00:04:18.595 --> 00:04:21.335
那麽chat-bot要做的事情就是，

101
00:04:21.335 --> 00:04:24.335
把音乐关掉。

102
00:04:24.335 --> 00:04:24.835
这个时候，

103
00:04:24.835 --> 00:04:27.065
你之后对chat-bot说

104
00:04:27.065 --> 00:04:29.935
"Please turn off the music."

105
00:04:29.935 --> 00:04:33.075
或"Can you turn off the music,  please?"

106
00:04:33.075 --> 00:04:36.395
看起来好像很聪明，

107
00:04:36.395 --> 00:04:39.355
人家就会觉得，嗯果然这就是人工智慧。

108
00:04:39.355 --> 00:04:42.085
但是如果你今天想要欺负那个chat-bot的话，

109
00:04:42.085 --> 00:04:46.125
你就可以说，"Please don't turn off the music."

110
00:04:46.125 --> 00:04:49.375
但是它还是会把音乐关掉。

111
00:04:49.375 --> 00:04:50.320
这是个真实的例子，

112
00:04:50.320 --> 00:04:52.385
你可以看看你身边有没有类似的chat-bot

113
00:04:52.385 --> 00:04:55.455
然后你去真的对它说这种

114
00:04:55.455 --> 00:04:58.065
故意欺负它讲这种话，它其实是会答错的。

115
00:04:58.065 --> 00:04:58.920
这其实是真实的例子，

116
00:04:58.920 --> 00:05:00.525
不要告诉你是哪家公司的产品，

117
00:05:00.525 --> 00:05:04.315
这家公司也是号称他们做了很多AI的东西。

118
00:05:04.315 --> 00:05:07.045
不要让你发现是哪一家的产品，

119
00:05:07.045 --> 00:05:08.335
免得被告。

120
00:05:08.335 --> 00:05:11.155
用这个hand-crafted rules 有甚麽坏处呢?

121
00:05:11.155 --> 00:05:14.195
它的坏处就是，

122
00:05:14.195 --> 00:05:17.145
hand-crafted rules没有办法考虑到所有的可能性，

123
00:05:17.145 --> 00:05:21.685
它非常的僵化，

124
00:05:21.685 --> 00:05:24.815
而用hand-crafted rules创造出来的machine，

125
00:05:24.815 --> 00:05:25.600
它永远没有办法

126
00:05:25.600 --> 00:05:27.845
超过它的创造者，也就是人类。

127
00:05:27.845 --> 00:05:29.515
人类想不到的东西，

128
00:05:29.515 --> 00:05:31.515
你就没有办法写规则，

129
00:05:31.515 --> 00:05:33.015
你没有写规则，

130
00:05:33.015 --> 00:05:35.015
机器就不知道要怎麽办。

131
00:05:35.015 --> 00:05:36.095
所以一个机器如果

132
00:05:36.095 --> 00:05:38.095
只能按照人设定好的hand-crafted rules，

133
00:05:38.095 --> 00:05:42.255
它所有的行为都是set好，

134
00:05:42.255 --> 00:05:44.255
它没有free style的。如果是这样子的话，

135
00:05:44.255 --> 00:05:45.435
它就没有办法超越创造它的

136
00:05:45.435 --> 00:05:48.435
人类。

137
00:05:48.435 --> 00:05:50.645
你可能会说，

138
00:05:50.645 --> 00:05:51.855
但是你好像看到很多chat-bot，

139
00:05:51.855 --> 00:05:54.965
看起来非常的聪明，

140
00:05:54.965 --> 00:05:58.035
这些chat-bot,

141
00:05:58.035 --> 00:06:01.635
如果是个非常大的industry，其实它可以hire成千上万的工程师这类的职业，

142
00:06:01.635 --> 00:06:04.655
以血汗的方式，

143
00:06:04.655 --> 00:06:05.380
来建出

144
00:06:05.380 --> 00:06:09.875
数以万计的规则，

145
00:06:09.875 --> 00:06:10.855
然后让它的机器

146
00:06:10.855 --> 00:06:11.620
看起来好像很聪明。

147
00:06:11.620 --> 00:06:13.695
但是对于中小企业来说，

148
00:06:13.695 --> 00:06:16.625
这样建规则的方式，反而是不利的。

149
00:06:16.625 --> 00:06:19.365
所以我认为机器学习的发展，

150
00:06:19.365 --> 00:06:22.555
对于比较小规模的企业反而是有利的，因为接下来也不需要hire 非常大量的人，

151
00:06:22.555 --> 00:06:26.195
来帮你想各式各样的规则。

152
00:06:26.195 --> 00:06:29.095
你只要手上有data，

153
00:06:29.095 --> 00:06:32.395
你可以让机器来帮你做这件事情。

154
00:06:32.395 --> 00:06:34.185
当然怎麽collect data又是另外一个问题，

155
00:06:34.185 --> 00:06:37.445
这个不是我们今天要讨论的主题。

156
00:06:37.445 --> 00:06:39.445
我知道

157
00:06:39.445 --> 00:06:40.545
AI这个词，

158
00:06:40.545 --> 00:06:43.665
现在非常非常非常的热门，

159
00:06:43.665 --> 00:06:44.460
所以会有

160
00:06:44.460 --> 00:06:46.465
各式各样，

161
00:06:46.465 --> 00:06:49.215
奇奇怪怪的东西。

162
00:06:49.215 --> 00:06:51.775
我觉得现在非常常遇到的问题，

163
00:06:51.775 --> 00:06:54.935
以许可以用以下这个漫画来说明，这是个四格漫画，

164
00:06:54.935 --> 00:06:56.695
这个漫画并不是

165
00:06:56.695 --> 00:06:59.975
随随便便的一个四格漫画，这个一块画是，

166
00:06:59.975 --> 00:07:03.875
Yann Lecun share在他的facebook上的漫画。

167
00:07:03.875 --> 00:07:07.240
这个漫画说甚麽呢?

168
00:07:07.240 --> 00:07:10.665
现在也一定常常在新闻或者是商展上看到这种东西。

169
00:07:10.665 --> 00:07:13.655
有一个sales说，

170
00:07:13.655 --> 00:07:16.445
看看我们最新的人工智慧机器人，

171
00:07:16.445 --> 00:07:19.755
它就是非常的人工智慧，

172
00:07:19.755 --> 00:07:22.475
要show这个系统呢，要搭配一个能言善道的sales，

173
00:07:22.475 --> 00:07:25.525
加上一个非常非常潮的前端跟外壳

174
00:07:25.525 --> 00:07:27.815
裡面是甚麽没有人知道。

175
00:07:27.815 --> 00:07:32.200
外面的观众就问说，它就是用甚麽neural的方法做的吗?

176
00:07:32.200 --> 00:07:34.375
反正就是，最潮的AI的技术就对了

177
00:07:34.375 --> 00:07:39.585
但是有时候你把它剖开来看，

178
00:07:39.585 --> 00:07:41.585
裡面都通通都是

179
00:07:41.585 --> 00:07:42.385
" if "

180
00:07:42.385 --> 00:07:46.965
掉出来这样。

181
00:07:46.965 --> 00:07:49.995
我知道现在

182
00:07:49.995 --> 00:07:53.065
政府企业他们都说想要推广AI，

183
00:07:53.065 --> 00:07:56.295
有时候他们想要推广的AI，

184
00:07:56.295 --> 00:07:58.945
其实是这种AI

185
00:07:58.945 --> 00:08:01.935
这个其实不是我们现在应该要做的事，

186
00:08:01.935 --> 00:08:04.655
如果你要推广的是这种hand-crafted 的AI的话，

187
00:08:04.655 --> 00:08:07.625
你怎麽50年前不推广一直到今天才突然做了呢?

188
00:08:07.625 --> 00:08:10.655
今天我们要走的不是这个路线，

189
00:08:10.655 --> 00:08:13.775
如果是这个路线，它应该是要被diss的

190
00:08:13.775 --> 00:08:16.015
我们要做的其实是，

191
00:08:16.015 --> 00:08:18.475
让机器它有

192
00:08:18.475 --> 00:08:19.280
自己学习的能力，

193
00:08:19.280 --> 00:08:21.555
也就是我们要做的

194
00:08:21.555 --> 00:08:23.205
应该是machine learning 的方向。

195
00:08:23.205 --> 00:08:26.375
如果讲得比较拟人化一点，

196
00:08:26.375 --> 00:08:29.055
所谓machine learning 的方向就是，

197
00:08:29.055 --> 00:08:31.745
这非常拟人化的讲法啦

198
00:08:31.745 --> 00:08:35.275
比较像是骗骗麻瓜的讲法

199
00:08:35.275 --> 00:08:38.205
你就写一个程式，

200
00:08:38.205 --> 00:08:38.820
然后它让机器变得很聪明，

201
00:08:38.820 --> 00:08:41.135
它就能够

202
00:08:41.135 --> 00:08:43.785
有学习的能力，

203
00:08:43.785 --> 00:08:46.495
接下来就像教一个婴儿或小孩一样，

204
00:08:46.495 --> 00:08:49.905
你并不是写程式让它做到这件事，

205
00:08:49.905 --> 00:08:52.855
你是写程式让它具有学习的能力，

206
00:08:52.855 --> 00:08:55.495
接下来你就可以用像教小孩一样的方式告诉它说，

207
00:08:55.495 --> 00:08:58.205
假设你要它学会做语音辨识，

208
00:08:58.205 --> 00:09:01.225
你就告诉它，这段声音就是"Hi"

209
00:09:01.225 --> 00:09:04.125
这段声音就是"How are you"

210
00:09:04.125 --> 00:09:07.185
这段声音就是"Good bye" 。然后希望接下来它就学会了

211
00:09:07.185 --> 00:09:10.225
然后你给它一段新的声音，

212
00:09:10.225 --> 00:09:13.115
它就可以帮你产生语音辨识的结果。

213
00:09:13.115 --> 00:09:15.765
或者是如过你希望它学会怎麽做影像辨识的话，

214
00:09:15.765 --> 00:09:18.075
你可能

215
00:09:18.075 --> 00:09:20.405
不太需要改太多的程式，因为它本身就有学习的能力

216
00:09:20.405 --> 00:09:23.015
你只是需要教它告诉它说

217
00:09:23.015 --> 00:09:25.775
看到这张图片，你要说这是猴子，

218
00:09:25.775 --> 00:09:28.905
看到这张图片，你要说这是猫，

219
00:09:28.905 --> 00:09:32.115
看到这张图片，你要说这是狗，它就具有影像辨识的能力了，

220
00:09:32.115 --> 00:09:35.815
接下来看到它没有看过的猫，希望它可以认得。

221
00:09:35.815 --> 00:09:38.765
这是比较拟人化的说法，

222
00:09:38.765 --> 00:09:41.735
如果要讲得更务实一点的话，

223
00:09:41.735 --> 00:09:44.695
你做的事情可以想成是，

224
00:09:44.695 --> 00:09:47.655
在寻找一个function。

225
00:09:47.655 --> 00:09:50.435
你要让机器具有一个能力，

226
00:09:50.435 --> 00:09:53.185
这个能力是根据你提供给它的资料，

227
00:09:53.185 --> 00:09:57.055
他去寻找出我们要寻找的function

228
00:09:57.055 --> 00:09:59.055
那很多我们关心的问题，都可以想成是

229
00:09:59.055 --> 00:10:00.065
我们就是

230
00:10:00.065 --> 00:10:03.125
需要一个function,

231
00:10:03.125 --> 00:10:04.155
举例来说，语音辨识。

232
00:10:04.155 --> 00:10:07.165
在语音辨识这个问题裡面，我们要找一个function，

233
00:10:07.165 --> 00:10:07.880
它的输入是声音讯号，

234
00:10:07.880 --> 00:10:09.975
它的输出是语音辨识的文字。

235
00:10:09.975 --> 00:10:13.055
这个function非常非常的複杂，

236
00:10:13.055 --> 00:10:16.105
有人可能会想说我来用一些写规则的方式，

237
00:10:16.105 --> 00:10:18.945
用很多语言学

238
00:10:18.945 --> 00:10:21.185
读很多语言学的文献，

239
00:10:21.185 --> 00:10:23.815
写一堆规则做语音辨识。

240
00:10:23.815 --> 00:10:27.345
这些事情60年代就有人在做了，到现在都还没做出来。

241
00:10:27.345 --> 00:10:30.355
语音辨识太过複杂，

242
00:10:30.355 --> 00:10:33.225
这个function太过複杂，不是人类可以写出来可以想像的

243
00:10:33.225 --> 00:10:35.955
所以我们需要凭藉机器的力量，

244
00:10:35.955 --> 00:10:38.975
帮我们把这个function找出来。

245
00:10:38.975 --> 00:10:41.895
或者说假设你要做影像辨识，

246
00:10:41.895 --> 00:10:45.005
那你就要找到一个function，输入就是一张图片，

247
00:10:45.005 --> 00:10:46.815
其实就是图片裡面的 pixel，

248
00:10:46.815 --> 00:10:50.285
输出就是这张图片有什麽样的东西。

249
00:10:50.285 --> 00:10:53.005
或者是这年头大家都一直在说AlphaGo,

250
00:10:53.005 --> 00:10:55.775
如果你要做一个可以下围棋的machine的话，

251
00:10:55.775 --> 00:10:58.745
其实你需要的也就是找一个function，

252
00:10:58.745 --> 00:11:02.025
这个function输入是

253
00:11:02.025 --> 00:11:05.660
围棋上19X19路的棋盘的盘势，你告诉机器说，

254
00:11:05.660 --> 00:11:08.035
在这19X19棋盘上，哪些位置有黑子，

255
00:11:08.035 --> 00:11:10.595
哪些位置有白子，

256
00:11:10.595 --> 00:11:13.475
然后机器就告诉你说，接下来下一步应该要落子在哪裡。

257
00:11:13.475 --> 00:11:16.525
或者是你要做聊天机器人，

258
00:11:16.525 --> 00:11:19.615
你需要的也是一个function，

259
00:11:19.615 --> 00:11:22.265
这个function的输入就是使用者的input，

260
00:11:22.265 --> 00:11:25.255
它的输出就是机器的回应。

261
00:11:25.255 --> 00:11:28.235
以下我们先很简短的跟大家说明，

262
00:11:28.235 --> 00:11:31.015
怎麽样找出一个function

263
00:11:31.015 --> 00:11:33.775
找出这个function的framework是甚麽呢?

264
00:11:33.775 --> 00:11:36.025
我们以影像辨识为例，我们要找一个function，

265
00:11:36.025 --> 00:11:38.745
输入一张图片，它告诉我们图片裡

266
00:11:38.745 --> 00:11:40.735
有甚麽样的东西。

267
00:11:40.735 --> 00:11:41.995
在做这件事，

268
00:11:41.995 --> 00:11:44.625
它的起手式是

269
00:11:44.625 --> 00:11:48.525
你要先准备一个function的set，

270
00:11:48.525 --> 00:11:52.945
这个function的set裡面，有成千上万的function，

271
00:11:52.945 --> 00:11:56.015
举例来说，这个function set 裡面有一个f1，

272
00:11:56.015 --> 00:11:58.965
你给它看一隻猫，它就告诉你输出猫，

273
00:11:58.965 --> 00:12:01.965
给它看一隻狗，就输出狗。有一个function f2，

274
00:12:01.965 --> 00:12:05.355
它很怪，你给它看猫它说是猴子，你给它看狗它说是蛇，

275
00:12:05.355 --> 00:12:08.205
你要准备一个function set，这个function set

276
00:12:08.205 --> 00:12:10.205
裡面有成千上万的function。

277
00:12:10.205 --> 00:12:13.795
这件事情讲起来有点抽象，你可能会很怀疑说，

278
00:12:13.795 --> 00:12:17.105
这怎麽回事? 怎麽准备成千上万的function?我怎麽把成千上万的function收集起来

279
00:12:17.105 --> 00:12:20.475
变成一个function?不过，

280
00:12:20.475 --> 00:12:21.240
这我们之后会再讲。

281
00:12:21.240 --> 00:12:23.615
总之我们先讲，

282
00:12:23.615 --> 00:12:26.715
假设你手上有一个function的set，

283
00:12:26.715 --> 00:12:30.255
其实这个function的set就叫做model。

284
00:12:30.255 --> 00:12:33.565
有了这个function的set以后，

285
00:12:33.565 --> 00:12:36.165
接下来第二步机器要做的事情是，

286
00:12:36.165 --> 00:12:38.915
开始有一些训练的资料。

287
00:12:38.915 --> 00:12:41.765
这些训练资料告诉机器说，

288
00:12:41.765 --> 00:12:44.745
一个好的function，它的输入输出应该长甚麽样子，

289
00:12:44.745 --> 00:12:46.715
有甚麽样的关系。

290
00:12:46.715 --> 00:12:49.515
你告诉机器说，

291
00:12:49.515 --> 00:12:52.495
现在在这个影像辨识的问题裡面，

292
00:12:52.495 --> 00:12:55.575
如果看到这个猴子的图，你就要输出猴子。

293
00:12:55.575 --> 00:12:58.435
看到这个猫的图你就要输出猫，看到狗的图你就要输出狗，

294
00:12:58.435 --> 00:13:01.375
这样才是对。

295
00:13:01.375 --> 00:13:04.225
藉由这些训练资料，你拿出一个function，

296
00:13:04.225 --> 00:13:07.915
机器就可以判断说这个function是好的

297
00:13:07.915 --> 00:13:10.825
还是不好的。机器可以判断一个function

298
00:13:10.825 --> 00:13:13.875
根据训练资料判断一个function是好的

299
00:13:13.875 --> 00:13:17.105
还是不好的。举例来说，

300
00:13:17.105 --> 00:13:19.415
在这个例子裡面，显然f1，

301
00:13:19.415 --> 00:13:22.805
它比较符合training data的叙述，

302
00:13:22.805 --> 00:13:25.775
它比较符合training data给我们的知识，所以f1看起来是比较好的，

303
00:13:25.775 --> 00:13:30.345
f2看起来是一个很荒谬的function。

304
00:13:30.345 --> 00:13:33.325
以下这个，我们今天讲的这个task，

305
00:13:33.325 --> 00:13:36.345
叫做supervised

306
00:13:36.345 --> 00:13:39.155
这个学习的情境其实叫做supervised learning。

307
00:13:39.155 --> 00:13:41.095
如果你告诉machine function的input

308
00:13:41.095 --> 00:13:42.115
和output，

309
00:13:42.115 --> 00:13:45.505
这个叫做supervised learning。

310
00:13:45.505 --> 00:13:48.405
之后我们会讲到其他不同learning的scenario。

311
00:13:48.405 --> 00:13:54.405
现在机器有办法决定一个function的好坏，

312
00:13:54.405 --> 00:13:57.295
光能够决定一个function的好坏是不够的，

313
00:13:57.295 --> 00:14:00.980
因为在你的function pool和function set裡面，它有成千上万的function，

314
00:14:00.980 --> 00:14:02.895
它有无穷无尽，几乎是无穷

315
00:14:02.895 --> 00:14:05.895
它有无穷的function，不可胜数的function，

316
00:14:05.895 --> 00:14:09.065
所以我们需要一个有效率的演算法

317
00:14:09.065 --> 00:14:12.015
这个有效率的演算法，可以从function的set裡面，

318
00:14:12.015 --> 00:14:15.145
挑出最好的function。一个个function衡量它好不好，

319
00:14:15.145 --> 00:14:18.215
太花时间了，

320
00:14:18.215 --> 00:14:21.525
实际上做不到，所以我们需要一个好的演算法，

321
00:14:21.525 --> 00:14:24.685
去从function的set裡面，挑出一个最好的function。

322
00:14:24.685 --> 00:14:28.025
这个最好的function，我们把它写作f*

323
00:14:28.025 --> 00:14:30.905
找出这个f*以后

324
00:14:30.905 --> 00:14:33.865
接下来我们就希望拿它来做一些事情

325
00:14:33.865 --> 00:14:36.715
我们可以拿它来做影像的辨识

326
00:14:36.715 --> 00:14:39.715
输入一张在training data裡没有看过的猫，

327
00:14:39.715 --> 00:14:43.740
然后希望它的输出也是猫。你可能会问说，

328
00:14:43.740 --> 00:14:46.025
机器学的时候没有看过这隻猫，

329
00:14:46.025 --> 00:14:49.285
那怎麽知道在测试的时候找出来的最好的function : f*

330
00:14:49.285 --> 00:14:52.315
可以正确的辨识这隻猫呢?

331
00:14:52.315 --> 00:14:55.305
这个就是，这样的序单元裡面，非常重要的问题:

332
00:14:55.305 --> 00:14:59.380
就是"机器有没有举一反三的能力?"

333
00:14:59.380 --> 00:15:02.025
这个我们之后会再讲。

334
00:15:02.025 --> 00:15:05.125
左边的部分叫做training，就是学习的过程，

335
00:15:05.125 --> 00:15:08.395
右边的部分叫做testing，

336
00:15:08.395 --> 00:15:11.425
就是学好以后你就可以拿它来运用

337
00:15:11.425 --> 00:15:14.385
这个是testing。

338
00:15:14.385 --> 00:15:17.595
所以在整个machine类的framework裡面，整个machine learning分成了三个步骤，

339
00:15:17.595 --> 00:15:20.325
第一个步骤就是，

340
00:15:20.325 --> 00:15:22.925
找一个function，订出一个function的set，

341
00:15:22.925 --> 00:15:25.075
第二个步骤就是，

342
00:15:25.075 --> 00:15:28.675
让一个machine可以衡量一个function是好还是不好

343
00:15:28.675 --> 00:15:31.915
第三个步骤就是，让machine有一个自动的方法，

344
00:15:31.915 --> 00:15:35.245
有一个好的演算法可以挑出最好的function。

345
00:15:35.245 --> 00:15:37.525
所以机器学习到这边，

346
00:15:37.525 --> 00:15:40.835
我们就说完了这样子。

347
00:15:40.835 --> 00:15:45.085
也许这整个学期的课你都不需要来，

348
00:15:45.085 --> 00:15:48.705
所以机器学习就是三个步骤，

349
00:15:48.705 --> 00:15:51.755
当然这三个步骤其实异常的简化了整个process，

350
00:15:51.755 --> 00:15:54.525
讲说机器学习只有三个步骤，

351
00:15:54.525 --> 00:15:57.555
就好像讲说如果我们要把大象塞进一个冰箱，

352
00:15:57.555 --> 00:16:00.585
其实也是三个步骤。

353
00:16:00.585 --> 00:16:03.525
你怎麽把大象塞进冰箱? 就是把门打开，

354
00:16:03.525 --> 00:16:06.615
把大象赶进去，然后把门关起来，

355
00:16:06.615 --> 00:16:09.145
然后就结束了。

356
00:16:09.145 --> 00:16:12.065
所以说机器学习只有三个步骤就好像是说，把大象放进冰箱

357
00:16:12.065 --> 00:16:16.445
也只需要三个步骤。意思是一样的。

358
00:16:16.445 --> 00:16:19.185
接下来的时间我们要讲一下，

359
00:16:19.185 --> 00:16:21.185
这门课裡面，你可以学到

360
00:16:21.185 --> 00:16:24.425
哪些和machine learning相关的技术。

361
00:16:24.425 --> 00:16:27.315
这个是这学期的learning map,

362
00:16:27.315 --> 00:16:30.395
看起来是有点複杂的，我们一块一块来解释。

363
00:16:30.395 --> 00:16:33.955
我们先从图的左上角开始，

364
00:16:33.955 --> 00:16:36.885
这个图的左上角是regression，

365
00:16:36.885 --> 00:16:39.455
甚麽是regression?

366
00:16:39.455 --> 00:16:42.435
regression 是一种machine learning 的task

367
00:16:42.435 --> 00:16:45.095
当我们说我们要做regression时的意思是说，

368
00:16:45.095 --> 00:16:47.555
我们今天要machine找出来的function，

369
00:16:47.555 --> 00:16:50.605
它的输出是一个scalar

370
00:16:50.605 --> 00:16:53.685
是一个数值，一个real number，

371
00:16:53.685 --> 00:16:56.715
这个叫做regression。

372
00:16:56.715 --> 00:16:59.685
举例来说，在作业一裡面，

373
00:16:59.685 --> 00:17:02.995
我们会要你做PM2.5的预测，也就是说你要找一个function，

374
00:17:02.995 --> 00:17:06.015
这个function的输出，

375
00:17:06.015 --> 00:17:08.765
就是未来某一个时间。

376
00:17:08.765 --> 00:17:11.805
举例来说，明天上午的PM2.5。PM2.5是一个数值，

377
00:17:11.805 --> 00:17:14.735
是一个number。所以这个是一个regression的problem。

378
00:17:14.735 --> 00:17:17.545
那机器要判断说，

379
00:17:17.545 --> 00:17:20.525
今天这个function要输出明天上午的PM2.5

380
00:17:20.525 --> 00:17:23.205
那明天上午的PM2.5，

381
00:17:23.205 --> 00:17:25.405
你要给它一些资讯，

382
00:17:25.405 --> 00:17:28.315
它才能够，它没有办法凭空猜出来，

383
00:17:28.315 --> 00:17:31.055
你要给它一些额外的资讯，

384
00:17:31.055 --> 00:17:34.015
它才能够猜出明天上午的PM2.5

385
00:17:34.015 --> 00:17:36.315
你给他的资讯，可能是

386
00:17:36.315 --> 00:17:39.465
今天上午的PM2.5，昨天上午的PM2.5等等

387
00:17:39.465 --> 00:17:41.465
这就是一个function， 它吃的是

388
00:17:41.465 --> 00:17:42.295
我们给它的

389
00:17:42.295 --> 00:17:45.665
过去的PM2.5的资料，

390
00:17:45.665 --> 00:17:48.645
它输出的是预测未来的PM2.5。

391
00:17:48.645 --> 00:17:51.675
你要训练这种machine，

392
00:17:51.675 --> 00:17:54.755
如同我们刚才在讲machine类的framework裡面讲的，

393
00:17:54.755 --> 00:17:57.775
你要准备一些训练资料。甚麽样的训练资料?

394
00:17:57.775 --> 00:18:00.825
你就告诉他说，今天根据我们过去的，

395
00:18:00.825 --> 00:18:06.015
从政府的open data上收集来的资料，

396
00:18:06.015 --> 00:18:08.985
9月1号上午的PM2.5是这个样子，

397
00:18:08.985 --> 00:18:11.945
9月2号是这个样子，9月3号是这个样子，

398
00:18:11.945 --> 00:18:14.535
所以一个好的function，输入这样子的一个PM2.5，

399
00:18:14.535 --> 00:18:17.455
它应该输出这样的PM2.5。

400
00:18:17.455 --> 00:18:18.080
给它9月12号PM2.5，

401
00:18:18.080 --> 00:18:19.575
9月13号PM2.5，

402
00:18:19.575 --> 00:18:22.625
它应该输出9月14号的PM2.5。

403
00:18:22.625 --> 00:18:25.605
收集到够多这样的data，

404
00:18:25.605 --> 00:18:29.395
就可以训练一个可以做气象预报的系统。

405
00:18:29.395 --> 00:18:32.395
刚才讲的是regression，

406
00:18:32.395 --> 00:18:35.585
接下来要讲的是classification。

407
00:18:35.585 --> 00:18:38.615
那regression和classification的差别是，

408
00:18:38.615 --> 00:18:41.345
我们要机器输出的东西的

409
00:18:41.345 --> 00:18:44.035
类型是不一样的。

410
00:18:44.035 --> 00:18:46.895
在regression裡面输出的是一个数值，

411
00:18:46.895 --> 00:18:49.885
在classification裡面机器输出的是，classification问题又分成两种，

412
00:18:49.885 --> 00:18:52.735
一种叫做Binary classification，

413
00:18:52.735 --> 00:18:55.685
二元的分类。在二元的分类裡面，

414
00:18:55.685 --> 00:18:58.415
我们要机器输出的就是 是或否，

415
00:18:58.415 --> 00:19:00.105
yes 或 no。

416
00:19:00.105 --> 00:19:03.145
那另外一类classification的problem叫multi-class 的classification

417
00:19:03.145 --> 00:19:06.215
在multi-class 的classification裡面，

418
00:19:06.215 --> 00:19:08.575
机器要做的事情是要做一个选择题

419
00:19:08.575 --> 00:19:11.605
你等于是给它数个选项，

420
00:19:11.605 --> 00:19:13.775
每一个选项就是一个类别。

421
00:19:13.775 --> 00:19:16.015
它都从数个类别裡面选择正确的类别，

422
00:19:16.015 --> 00:19:21.205
这叫multi-class 的classification。

423
00:19:21.205 --> 00:19:23.905
我们就为binary和multi-class classification

424
00:19:23.905 --> 00:19:27.275
分别举一个例子。举例来说，

425
00:19:27.275 --> 00:19:29.705
G-mail有做spam filtering 这件事

426
00:19:29.705 --> 00:19:32.725
它自动侦测出垃圾邮件，

427
00:19:32.725 --> 00:19:35.635
帮你把它放在垃圾邮件夹内。那它怎麽做到这件事呢?

428
00:19:35.635 --> 00:19:38.575
其实我们需要的就是一个function。

429
00:19:38.575 --> 00:19:41.065
这个function的输入就是一封e-mail。

430
00:19:41.065 --> 00:19:45.375
当然要怎麽让一个function吃一个e-mail当作输入?

431
00:19:45.375 --> 00:19:48.375
是你自己要想看看的。这个我们未来再讲。

432
00:19:48.375 --> 00:19:51.315
这个function吃一个e-mail当作输入，

433
00:19:51.315 --> 00:19:54.325
它的输出就是，这封e-mail是垃圾邮件，还是不是垃圾邮件?

434
00:19:54.325 --> 00:19:56.325
你要训练这样的function，怎麽做?

435
00:19:56.325 --> 00:20:00.425
很简单，你就给它一大堆的data，

436
00:20:00.425 --> 00:20:03.435
告诉它说，现在输入这一封邮件，

437
00:20:03.435 --> 00:20:04.434
你应该说它是垃圾邮件；

438
00:20:04.434 --> 00:20:04.959
你应该说它是垃圾邮件；

439
00:20:04.959 --> 00:20:05.560
你应该说它是垃圾邮件；

440
00:20:05.560 --> 00:20:06.060
输入这一封邮件，

441
00:20:06.060 --> 00:20:08.480
输入这一封邮件，

442
00:20:08.480 --> 00:20:08.980
你应该说它不是垃圾邮件。

443
00:20:08.980 --> 00:20:11.260
你给它够多的这种资料去学，

444
00:20:11.260 --> 00:20:11.904
它就可以自动找出一个，

445
00:20:11.904 --> 00:20:12.404
它就可以自动找出一个，

446
00:20:12.404 --> 00:20:12.904
它就可以自动找出一个，

447
00:20:12.904 --> 00:20:13.404
它就可以自动找出一个，

448
00:20:13.404 --> 00:20:13.904
可以侦测垃圾邮件的function。

449
00:20:13.904 --> 00:20:14.404
可以侦测垃圾邮件的function。

450
00:20:14.404 --> 00:20:14.904
可以侦测垃圾邮件的function。

451
00:20:14.904 --> 00:20:15.404
可以侦测垃圾邮件的function。

452
00:20:15.404 --> 00:20:15.904
可以侦测垃圾邮件的function。

453
00:20:15.904 --> 00:20:16.404
可以侦测垃圾邮件的function。

454
00:20:16.404 --> 00:20:17.620
那multi-class classification

455
00:20:17.620 --> 00:20:18.120
那multi-class classification

456
00:20:18.120 --> 00:20:18.620
那multi-class classification

457
00:20:18.620 --> 00:20:19.378
这边举一个文章分类的例子。

458
00:20:19.378 --> 00:20:19.878
这边举一个文章分类的例子。

459
00:20:19.878 --> 00:20:20.378
这边举一个文章分类的例子。

460
00:20:20.378 --> 00:20:20.878
这边举一个文章分类的例子。

461
00:20:20.878 --> 00:20:21.378
现在网路上有非常多的新闻，

462
00:20:21.378 --> 00:20:21.878
现在网路上有非常多的新闻，

463
00:20:21.878 --> 00:20:22.378
现在网路上有非常多的新闻，

464
00:20:22.378 --> 00:20:23.342
也许也有人能把所有的新闻看完。

465
00:20:23.342 --> 00:20:23.842
也许也有人能把所有的新闻看完。

466
00:20:23.842 --> 00:20:24.342
也许也有人能把所有的新闻看完。

467
00:20:24.342 --> 00:20:25.965
也许也有人能把所有的新闻看完。

468
00:20:25.965 --> 00:20:26.465
也许也有人能把所有的新闻看完。

469
00:20:26.465 --> 00:20:27.735
那你希望机器自动帮你把新闻做分类，怎麽做呢?

470
00:20:27.735 --> 00:20:30.255
那你希望机器自动帮你把新闻做分类，怎麽做呢?

471
00:20:30.255 --> 00:20:33.215
你需要一个function，它的输入是一则新闻，

472
00:20:33.215 --> 00:20:36.265
输出就是这一则新闻，属于哪一个类别。

473
00:20:36.265 --> 00:20:38.595
你可以想成每一个类别就是一个选项，

474
00:20:38.595 --> 00:20:41.445
政治是一个选项，经济是一个选项，体育是一个选项。

475
00:20:41.445 --> 00:20:44.645
机器要做的事情就是，解这个选择题。

476
00:20:44.645 --> 00:20:47.515
你要训练这种机器，你就告诉它说，

477
00:20:47.515 --> 00:20:50.215
你就准备很多训练资料，

478
00:20:50.215 --> 00:20:53.085
告诉它说 : 这篇文章叫做体育，

479
00:20:53.085 --> 00:20:56.055
这篇文章你要选政治，这篇文章你要选财经，

480
00:20:56.055 --> 00:21:01.620
之后给它新的文章，希望它能给你正确的结果。

481
00:21:01.620 --> 00:21:03.595
刚才讲的，都是你要machine解的任务。

482
00:21:03.595 --> 00:21:07.325
刚才讲的，都是你要machine解的任务。

483
00:21:07.325 --> 00:21:09.995
再来要讲的，在解任务的过程中，

484
00:21:09.995 --> 00:21:12.765
第一步就是要选一个function的set，那选不同的function set，

485
00:21:12.765 --> 00:21:16.175
你会得到不同的结果。

486
00:21:16.175 --> 00:21:19.295
选不同的function set就是选不同的model。

487
00:21:19.295 --> 00:21:22.325
model很多种，举例来说，non-linear的model上面。

488
00:21:22.325 --> 00:21:25.395
最简单的是linear的model。其中一个大家最耳熟的，

489
00:21:25.395 --> 00:21:27.635
我们会花很多时间focus在non-linear的model上面。

490
00:21:27.635 --> 00:21:30.595
那在non-linear的model裡面，

491
00:21:30.595 --> 00:21:33.005
其中一个今日最耳熟能详的，

492
00:21:33.005 --> 00:21:36.735
就是deep learning。

493
00:21:36.735 --> 00:21:39.545
所谓的deep learning的意思，

494
00:21:39.545 --> 00:21:42.095
之后我们会再细讲deep learning的内容，

495
00:21:42.095 --> 00:21:45.045
今天只要知道说，在做deep learning的内容时候，

496
00:21:45.045 --> 00:21:48.315
我们的function是特别複杂的。

497
00:21:48.315 --> 00:21:49.675
所以它可以做特别複杂的事，举例来说，

498
00:21:49.675 --> 00:21:52.765
所以它可以做特别複杂的事，举例来说，

499
00:21:52.765 --> 00:21:55.635
它可以做影像的辨识，

500
00:21:55.635 --> 00:21:57.635
这个特别複杂的function，

501
00:21:57.635 --> 00:22:02.765
这个特别複杂的function，它可以描述这个peak zone

502
00:22:02.765 --> 00:22:05.955
和它的class之间的关系。你要找这样子的function，你就是准备一些训练资料，

503
00:22:05.955 --> 00:22:09.165
给机器去学就可以了。

504
00:22:09.165 --> 00:22:11.165
用deep learning 的技术，你也可以让机器，

505
00:22:11.165 --> 00:22:11.960
学会下围棋。

506
00:22:11.960 --> 00:22:15.245
那在下一节的task，

507
00:22:15.245 --> 00:22:18.275
下一节的task其实就是一个分类的问题。

508
00:22:18.275 --> 00:22:21.415
只是这个分类的问题我们需要一个很複杂的function，

509
00:22:21.415 --> 00:22:24.385
给它的输入，是一个棋盘的盘式，

510
00:22:24.385 --> 00:22:27.695
那输出就是下一步应该落子的位置。

511
00:22:27.695 --> 00:22:30.615
我们知道说，

512
00:22:30.615 --> 00:22:33.475
一个棋盘上就是有19X19的位置是你可以落子的。

513
00:22:33.475 --> 00:22:36.405
一个棋盘上就是有19X19的位置是你可以落子的。

514
00:22:36.405 --> 00:22:39.415
所以今天下围棋这件事情，

515
00:22:39.415 --> 00:22:42.405
你就可以把它想成是一个19X19个类别的分类问题，

516
00:22:42.405 --> 00:22:44.120
或者是，

517
00:22:44.120 --> 00:22:45.475
你可以把它想成是一个，

518
00:22:45.475 --> 00:22:48.905
有19X19个选项的选择题。

519
00:22:48.905 --> 00:22:50.935
有19X19个选项的选择题。

520
00:22:50.935 --> 00:22:51.640
那你要怎麽训练机器

521
00:22:51.640 --> 00:22:53.895
让它学会下围棋呢?

522
00:22:53.895 --> 00:22:57.085
你要收集训练资料，

523
00:22:57.085 --> 00:22:57.980
告诉机器，

524
00:22:57.980 --> 00:22:59.118
现在这个function的输入输出，

525
00:22:59.118 --> 00:23:02.755
现在这个function的输入输出，分别应该是甚麽。

526
00:23:02.755 --> 00:23:05.765
看到某样的盘式，我们应该输出甚麽样的output。然后大家就非常的讶异；

527
00:23:05.765 --> 00:23:08.915
看到某样的盘式，我们应该输出甚麽样的output。

528
00:23:08.915 --> 00:23:11.725
那怎麽收集这种资料呢?

529
00:23:11.725 --> 00:23:12.340
你可以从人类过去下的棋谱裡面，

530
00:23:12.340 --> 00:23:14.625
收集这样子的资料。

531
00:23:14.625 --> 00:23:17.025
举例来说，你收集了进藤光和社清春下的那一盘棋谱

532
00:23:17.025 --> 00:23:19.945
举例来说，你收集了进藤光和社清春下的那一盘棋谱

533
00:23:19.945 --> 00:23:22.845
在那一盘棋裡面，

534
00:23:22.845 --> 00:23:25.865
首先首先社清春出手先下5之五，，

535
00:23:25.865 --> 00:23:28.895
然后大家就非常的讶异；

536
00:23:28.895 --> 00:23:32.105
然后进藤光次手再下天元，大家又更加讶异，

537
00:23:32.105 --> 00:23:36.405
然后社清春第三首在下五之5，大家就非常非常的讶异。

538
00:23:36.405 --> 00:23:39.505
所以你有了这样子的棋谱后，你就告诉machine说，

539
00:23:39.505 --> 00:23:42.845
如果现在棋盘上有人落子在5之五，

540
00:23:42.845 --> 00:23:44.535
如果现在棋盘上有人落子在5之五，

541
00:23:44.535 --> 00:23:47.815
那下一步你就落子在天元。

542
00:23:47.815 --> 00:23:50.565
如果现在5之五和天元都已经有子了来

543
00:23:50.565 --> 00:23:53.535
那你就落子在另外一个五之5的位置。

544
00:23:53.535 --> 00:23:55.295
那你就落子在另外一个五之5的位置。

545
00:23:55.295 --> 00:23:55.900
你给它够多的棋谱，

546
00:23:55.900 --> 00:24:00.755
它就可以学会怎麽下围棋了。

547
00:24:00.755 --> 00:24:03.765
除了deep learning以外，

548
00:24:03.765 --> 00:24:06.965
还有很多其他的machine learning的model，

549
00:24:06.965 --> 00:24:09.905
它也是non-linear的model。

550
00:24:09.905 --> 00:24:12.280
这学期会请吴老师帮我们讲SVM。

551
00:24:12.280 --> 00:24:12.905
这学期会请吴老师帮我们讲SVM。

552
00:24:12.905 --> 00:24:17.400
这学期会请吴老师帮我们讲SVM。

553
00:24:17.400 --> 00:24:19.635
刚才我们讲的都是supervised learning

554
00:24:19.635 --> 00:24:22.645
supervised learning类的问题是，

555
00:24:22.645 --> 00:24:23.340
我们需要大量的training data，

556
00:24:23.340 --> 00:24:25.685
这些training data告诉我们说，

557
00:24:25.685 --> 00:24:28.525
一个我们要找的function，

558
00:24:28.525 --> 00:24:31.555
它的input和output之间有甚麽样的关系。

559
00:24:31.555 --> 00:24:34.355
它的input和output之间有甚麽样的关系。

560
00:24:34.355 --> 00:24:37.365
这个function的output，我们常叫做 label。

561
00:24:37.365 --> 00:24:39.355
所以常常听到说做机器学习需要大量的label，

562
00:24:39.355 --> 00:24:42.275
指的就是说，如果我们用supervised的技术，

563
00:24:42.275 --> 00:24:45.515
我们是要让机器在supervised learning的情境中学习。

564
00:24:45.515 --> 00:24:48.555
我们需要告诉机器，function的input和output是甚麽。

565
00:24:48.555 --> 00:24:51.605
这个output往往没办法用很自然的方式取得，

566
00:24:51.605 --> 00:24:52.300
这个output往往没办法用很自然的方式取得，

567
00:24:52.300 --> 00:24:54.695
我们必须要凭著人工的力量，

568
00:24:54.695 --> 00:24:57.635
把它雕塑出来。

569
00:24:57.635 --> 00:25:00.615
这些function的output叫做label，

570
00:25:00.615 --> 00:25:01.300
那你要找到这样的label，

571
00:25:01.300 --> 00:25:03.735
往往需要很大量的effort。

572
00:25:03.735 --> 00:25:06.745
有没有办法减少label需要的量呢?

573
00:25:06.745 --> 00:25:08.745
那是有办法的!

574
00:25:08.745 --> 00:25:09.875
举例来说，有另外一个scenario，

575
00:25:09.875 --> 00:25:12.835
举例来说，有另外一个scenario，

576
00:25:12.835 --> 00:25:15.945
叫做semi-supervised learning。

577
00:25:15.945 --> 00:25:18.765
semi-supervised learning的意思是说，

578
00:25:18.765 --> 00:25:21.805
举例来说，你今天想要机器鑑别猫和狗的不同，

579
00:25:21.805 --> 00:25:25.005
你想要做一个分类器，输入一张图片告诉你它是猫或狗

580
00:25:25.005 --> 00:25:27.705
你有少量的猫和狗的labeled data，

581
00:25:27.705 --> 00:25:30.605
你有少量的猫和狗的labeled data，

582
00:25:30.605 --> 00:25:33.625
但是同时你又有大量的unlabeled data。

583
00:25:33.625 --> 00:25:36.145
你有一大堆猫和狗的图片，

584
00:25:36.145 --> 00:25:39.315
但是你没有力气去告诉机器说那些是猫那些是狗。

585
00:25:39.315 --> 00:25:42.605
在semi-supervised learning 的技术裡面，

586
00:25:42.605 --> 00:25:45.745
这些没有labeled的data，

587
00:25:45.745 --> 00:25:48.725
它可能也是对学习有帮助。

588
00:25:48.725 --> 00:25:51.705
我们之后会再讲说，

589
00:25:51.705 --> 00:25:56.785
为甚麽这些没有labeled的data会对学习有帮助。

590
00:25:56.785 --> 00:25:59.905
那另外一个减少data用量的方向是transfer learning，

591
00:25:59.905 --> 00:26:02.615
那另外一个减少data用量的方向是transfer learning，

592
00:26:02.615 --> 00:26:05.625
transfer learning的意思是说，假设我们一样要做猫和狗的分类的问题，

593
00:26:05.625 --> 00:26:08.675
我们也一样只有少量的有labeled的data，

594
00:26:08.675 --> 00:26:11.825
但是我们现在有另外大量的data，

595
00:26:11.825 --> 00:26:14.615
这些大量的data它可能有labeled，也可能没有labeled，

596
00:26:14.615 --> 00:26:17.275
这些大量的data它可能有labeled，也可能没有labeled，

597
00:26:17.275 --> 00:26:20.045
但是它跟我们现在要讨论的问题是没有甚麽特别的关系的。

598
00:26:20.045 --> 00:26:23.095
我们要分别的是猫和狗的不同，

599
00:26:23.095 --> 00:26:26.115
但是你这边有一大堆其他动画的图片，

600
00:26:26.115 --> 00:26:28.325
这个是凉宫春日，

601
00:26:28.325 --> 00:26:31.245
这个是御坂美晴

602
00:26:31.245 --> 00:26:34.265
你有一大堆不相干的图片，

603
00:26:34.265 --> 00:26:37.135
它到底可以带来甚麽样的帮助?

604
00:26:37.135 --> 00:26:42.605
这个就是transfer learning要讲的问题。

605
00:26:42.605 --> 00:26:45.805
更进阶的是，unsupervised learning

606
00:26:45.805 --> 00:26:46.620
在unsupervised learning裡面，

607
00:26:46.620 --> 00:26:48.375
顾名思义，我们就是希望机器学到无师自通。

608
00:26:48.375 --> 00:26:52.025
顾名思义，我们就是希望机器学到无师自通。

609
00:26:52.025 --> 00:26:54.565
如果在完全没有任何label的情况之下，

610
00:26:54.565 --> 00:26:57.805
到底机器可以学到甚麽样的知识?

611
00:26:57.805 --> 00:27:00.795
举例来说，如果我们给机器看大量的文章，

612
00:27:00.795 --> 00:27:07.075
收集大量的文章很容易

613
00:27:07.075 --> 00:27:10.355
这种机器看过大量的文章以后

614
00:27:10.355 --> 00:27:13.485
它到底可以学到甚麽事情?

615
00:27:13.485 --> 00:27:17.705
它能不能够学会每个词彙的意思?

616
00:27:17.705 --> 00:27:20.745
要让机器学会每个词彙的意思，

617
00:27:20.745 --> 00:27:23.685
你可以想成是我们要找一个function，

618
00:27:23.685 --> 00:27:25.100
然后你把一个词彙丢进去，

619
00:27:25.100 --> 00:27:26.695
比如说你把Apple丢进这个function裡面

620
00:27:26.695 --> 00:27:27.300
比如说你把Apple丢进这个function裡面

621
00:27:27.300 --> 00:27:29.545
机器要输出告诉你说，

622
00:27:29.545 --> 00:27:32.485
这个词彙是什麽意思。

623
00:27:32.485 --> 00:27:35.095
也许它用一个向量来表示这个词彙的，各种不同的特性

624
00:27:35.095 --> 00:27:37.495
不同的attribute。

625
00:27:37.495 --> 00:27:40.115
但是现在假如是一个unsupervised learning 的问题，

626
00:27:40.115 --> 00:27:43.095
你现在只有一大堆的文章，

627
00:27:43.095 --> 00:27:45.675
也就是你只有词彙，你只有function的输入，

628
00:27:45.675 --> 00:27:46.380
没有任何的输出，

629
00:27:46.380 --> 00:27:48.605
那到底要怎麽解这个问题?

630
00:27:48.605 --> 00:27:49.985
那到底要怎麽解这个问题?

631
00:27:49.985 --> 00:27:53.025
或者是我们举另外一个unsupervised learning的例子，

632
00:27:53.025 --> 00:27:55.955
假设我们今天带机器去动物园，让它看一大堆的动物，

633
00:27:55.955 --> 00:27:57.585
它能不能在看了一大堆动物之后，

634
00:27:57.585 --> 00:27:59.585
它能不能在看了一大堆动物之后，

635
00:27:59.585 --> 00:28:00.575
它就学会自己创造一些动物。

636
00:28:00.575 --> 00:28:03.435
这个都是真实的例子，

637
00:28:03.435 --> 00:28:06.295
这是从Ian Goodfellow投影片上载下来的

638
00:28:06.295 --> 00:28:09.085
仔细看了大量的动物以后，

639
00:28:09.085 --> 00:28:11.085
它就可以自己画一些狗出来。

640
00:28:11.085 --> 00:28:14.160
像它画的有，眼睛长在身上的狗

641
00:28:14.160 --> 00:28:19.595
还有乳牛狗这样子。

642
00:28:19.595 --> 00:28:20.500
像这样子的一个task，

643
00:28:20.500 --> 00:28:22.265
它也是个unsupervised learning 的problem

644
00:28:22.265 --> 00:28:24.265
它也是个unsupervised learning 的problem

645
00:28:24.265 --> 00:28:25.585
你的function的输入，

646
00:28:25.585 --> 00:28:28.105
不知道是甚麽，

647
00:28:28.105 --> 00:28:31.455
可能是某一个code，它代表了要输出图片的特性。

648
00:28:31.455 --> 00:28:34.175
那输出是一张图片

649
00:28:34.175 --> 00:28:37.125
你给机器看到的，只有非常大量的图片

650
00:28:37.125 --> 00:28:40.365
你只有function的output，没有function的input

651
00:28:40.365 --> 00:28:43.395
在这种情况下，机器怎麽学会自己生成新的图片?

652
00:28:43.395 --> 00:28:46.305
在这种情况下，机器怎麽学会自己生成新的图片?

653
00:28:46.305 --> 00:28:50.085
这个是我们之后会再cover的问题

654
00:28:50.085 --> 00:28:52.755
接下来，

655
00:28:52.755 --> 00:28:55.855
我们刚才讲的是不同的 learning scenario

656
00:28:55.855 --> 00:28:56.980
我们刚才讲的是不同的 learning scenario

657
00:28:56.980 --> 00:29:01.955
在machine 要解的任务上，

658
00:29:01.955 --> 00:29:05.125
我们讲了regression的problem，讲了classification的problem

659
00:29:05.125 --> 00:29:08.505
还有一类的问题是你比较少听过的，

660
00:29:08.505 --> 00:29:09.180
这类的问题叫做structured learning

661
00:29:09.180 --> 00:29:11.335
这类的问题叫做structured learning

662
00:29:11.335 --> 00:29:14.285
甚麽是structured learning呢?

663
00:29:14.285 --> 00:29:17.435
在structured learning裡面，我们要机器输出的是

664
00:29:17.435 --> 00:29:20.535
一个有结构性的东西。

665
00:29:20.535 --> 00:29:24.105
刚才在regression problem裡面机器输出几个数值；

666
00:29:24.105 --> 00:29:26.815
在分类的问题裡面机器只是输出一个选项，

667
00:29:26.815 --> 00:29:29.545
它选一个选项；

668
00:29:29.545 --> 00:29:32.525
在structured类的problem裡面，

669
00:29:32.525 --> 00:29:35.745
机器要输出的是一个複杂的物件。

670
00:29:35.745 --> 00:29:38.595
举例来说，在语音辨识裡面，

671
00:29:38.595 --> 00:29:41.595
机器的输入是一个声音讯号，输出的是一个句子

672
00:29:41.595 --> 00:29:43.865
句子是由许多词彙拼凑而成，

673
00:29:43.865 --> 00:29:47.820
它是一个有结构性的object。

674
00:29:47.820 --> 00:29:49.995
或者是说在机器翻译裡面，你说一句话，

675
00:29:49.995 --> 00:29:53.135
然后你输入中文，你希望机器翻译成英文，

676
00:29:53.135 --> 00:29:56.045
那机器的输出也是一个句子。

677
00:29:56.045 --> 00:29:58.615
这也是有结构性的东西。

678
00:29:58.615 --> 00:30:01.235
或者是说，你今天要做的是人脸辨识，

679
00:30:01.235 --> 00:30:04.655
你给机器看一张图片，

680
00:30:04.655 --> 00:30:07.715
它会知道说，最左边是长门，中间是凉宫春日，

681
00:30:07.715 --> 00:30:11.405
最右边这个，

682
00:30:11.405 --> 00:30:17.345
这个是朝比奈实玖瑠。

683
00:30:17.345 --> 00:30:20.345
它要把这些东西标出来，

684
00:30:20.345 --> 00:30:23.335
这也是个structured learning 的problem

685
00:30:23.335 --> 00:30:26.845
我知道多数人可能都听过regression，

686
00:30:26.845 --> 00:30:29.855
也听过classification，

687
00:30:29.855 --> 00:30:32.875
你可能不见得有听过structured learning

688
00:30:32.875 --> 00:30:35.965
这时候教授就会直接写说

689
00:30:35.965 --> 00:30:39.940
machine learning就是两大类的问题 : regression的problem还有classification的problem

690
00:30:39.940 --> 00:30:42.175
但是说machine learning 只有regression和classification problem

691
00:30:42.175 --> 00:30:45.295
但是说machine learning 只有regression和classification problem

692
00:30:45.295 --> 00:30:48.485
就好像是告诉你说，这个是我们熟知的世界

693
00:30:48.485 --> 00:30:51.105
它有五大洲

694
00:30:51.105 --> 00:30:54.115
事实上这个只是真实的世界一个小部分而已。

695
00:30:54.115 --> 00:30:57.115
事实上这个只是真实的世界一个小部分而已。

696
00:30:57.115 --> 00:30:59.155
真正的世界其实是这个样子的。

697
00:30:59.155 --> 00:31:00.255
这个是暗黑大陆

698
00:31:00.255 --> 00:31:02.835
这个是暗黑大陆，

699
00:31:02.835 --> 00:31:05.205
可是我们这辈子永远也到不了的

700
00:31:05.205 --> 00:31:08.715
structured learning就像是暗黑大陆一样

701
00:31:08.715 --> 00:31:11.835
这里面还有很多很多问题是人类无法探究的

702
00:31:11.835 --> 00:31:12.995
事实上最近有一个很潮的技术叫做GAN，

703
00:31:12.995 --> 00:31:16.565
事实上最近有一个很潮的技术叫做GAN，

704
00:31:16.565 --> 00:31:17.445
事实上最近有一个很潮的技术叫做GAN，

705
00:31:17.445 --> 00:31:20.375
它念起来更像是 ㄍㄢ四声

706
00:31:20.375 --> 00:31:23.235
所以最近在路上常常会听到有人在讲ㄍㄢ四声

707
00:31:23.235 --> 00:31:27.315
他们其实是在讨论这个技术

708
00:31:27.315 --> 00:31:28.775
这个技术其实就是一个新的structured learning的方法

709
00:31:28.775 --> 00:31:31.965
这个技术其实就是一个新的structured learning的方法

710
00:31:31.965 --> 00:31:35.445
这个我们之后也会提到。

711
00:31:35.445 --> 00:31:37.725
最后还有一个现在大家都耳熟能详的

712
00:31:37.725 --> 00:31:40.655
就是reinforcement learning的problem

713
00:31:40.655 --> 00:31:42.885
就是reinforcement learning的problem

714
00:31:42.885 --> 00:31:45.665
所谓reinforcement learning的意思是甚麽呢?

715
00:31:45.665 --> 00:31:48.345
现在大家都或多或少知道，

716
00:31:48.345 --> 00:31:51.705
至少知道它是一个很潮的东西。

717
00:31:51.705 --> 00:31:53.935
至少知道它是一个很潮的东西。

718
00:31:53.935 --> 00:31:57.185
这个reinforcement learning其实是一个发展很久的问题，

719
00:31:57.185 --> 00:32:00.185
它绝对不是一个新的技术。

720
00:32:00.185 --> 00:32:01.195
最近会比较受到重视，

721
00:32:01.195 --> 00:32:02.315
一开始是因为DeepMind

722
00:32:02.315 --> 00:32:04.625
一开始是因为DeepMind

723
00:32:04.625 --> 00:32:07.055
拿reinforcement learning的技术去玩Akari的游戏

724
00:32:07.055 --> 00:32:10.105
拿reinforcement learning的技术去玩Akari的游戏

725
00:32:10.105 --> 00:32:13.395
在小游戏上可以痛扁人类

726
00:32:13.395 --> 00:32:16.625
他们现在很厉害会把paper发到Nature上去

727
00:32:16.625 --> 00:32:17.655
他们现在很厉害会把paper发到Nature上去

728
00:32:17.655 --> 00:32:19.965
另外第二个大家都知道的例子，

729
00:32:19.965 --> 00:32:22.655
就是AlphaGo

730
00:32:22.655 --> 00:32:24.825
我们都知道AlphaGo裡面有用到reinforcement learning的技术

731
00:32:24.825 --> 00:32:28.065
那reinforcement learning的技术是甚麽呢?

732
00:32:28.065 --> 00:32:31.155
我们把它跟supervised learning 的技术比较起来是这个样子

733
00:32:31.155 --> 00:32:34.105
在supervised learning的技术裡面，

734
00:32:34.105 --> 00:32:36.865
我们会告诉机器正确答案是甚麽。

735
00:32:36.865 --> 00:32:38.440
举例来说，

736
00:32:38.440 --> 00:32:39.105
假设你要使用supervised的方法来训练一个聊天机器人

737
00:32:39.105 --> 00:32:39.615
假设你要使用supervised的方法来训练一个聊天机器人

738
00:32:39.615 --> 00:32:42.675
假设你要使用supervised的方法来训练一个聊天机器人

739
00:32:42.675 --> 00:32:45.525
那你的训练方式是这样，你给机器的data是这样:

740
00:32:45.525 --> 00:32:48.255
你就告诉机器说，现在使用者说hello

741
00:32:48.255 --> 00:32:51.525
你就说hi；现在使用者说bye bye

742
00:32:51.525 --> 00:32:54.825
你就说 good bye

743
00:32:54.825 --> 00:32:57.825
所以机器有一个家教在它的旁边手把手的教它每件事情

744
00:32:57.825 --> 00:33:00.945
这个是supervised learning

745
00:33:00.945 --> 00:33:03.955
那reinforcement learning是甚麽呢?

746
00:33:03.955 --> 00:33:07.085
在reinforcement learning裡面，我们没有告诉机器正确的答案是甚麽，

747
00:33:07.085 --> 00:33:10.615
机器所拥有的只有一个分数，

748
00:33:10.615 --> 00:33:13.995
就是它做的好还是不好。

749
00:33:13.995 --> 00:33:16.885
举例来说，

750
00:33:16.885 --> 00:33:20.025
我们现在要用reinforcement learning的方法来训练一个聊天机器人的话，

751
00:33:20.025 --> 00:33:22.805
那它训练的方法会像是这样:

752
00:33:22.805 --> 00:33:23.305
你就把机器放在线上，

753
00:33:23.305 --> 00:33:26.245
你就把机器放在线上，

754
00:33:26.245 --> 00:33:29.415
让它跟随便进来的客人对话

755
00:33:29.415 --> 00:33:30.675
讲了半天后，

756
00:33:30.675 --> 00:33:33.395
最后人就勃然大怒，就把电话挂掉了

757
00:33:33.395 --> 00:33:36.695
机器就学到一件事情: 刚才做错了

758
00:33:36.695 --> 00:33:38.125
它不知道哪边做错了

759
00:33:38.125 --> 00:33:41.285
它不知道哪边做错了

760
00:33:41.285 --> 00:33:44.225
它必须自己回去想一下说到底如何改进

761
00:33:44.225 --> 00:33:46.745
所以一开始就不应该打招呼吗?还是中间不应该骂葬话呢?

762
00:33:46.745 --> 00:33:48.045
它不知道，没有人告诉这件事

763
00:33:48.045 --> 00:33:49.485
它不知道，没有人告诉这件事

764
00:33:49.485 --> 00:33:52.935
它只知道自己做的不好，它要回去反省检讨看看到底是哪一步做的不好

765
00:33:52.935 --> 00:33:56.365
所以机器要在reinforcement learning的情况下学习，

766
00:33:56.365 --> 00:33:58.225
它是需要比较强的intelligence。

767
00:33:58.225 --> 00:34:00.575
它是需要比较强的intelligence。

768
00:34:00.575 --> 00:34:03.435
所以supervised learning 就是learning from teacher

769
00:34:03.435 --> 00:34:06.485
机器有老师，老师会告诉它每个问题的答案

770
00:34:06.485 --> 00:34:09.905
机器有老师，老师会告诉它每个问题的答案

771
00:34:09.905 --> 00:34:12.855
那reinforcement learning是learning from critics

772
00:34:12.855 --> 00:34:14.855
它是从评价中去学习的

773
00:34:14.855 --> 00:34:15.855
它是从评价中去学习的

774
00:34:15.855 --> 00:34:18.765
它只知道自己做的好或不好，

775
00:34:18.765 --> 00:34:19.755
但它不知道自己哪裡做得好，

776
00:34:19.755 --> 00:34:22.985
它不知道哪裡做得不好，它也没有正确的答案

777
00:34:22.985 --> 00:34:26.075
reinforcement learning会这麽受到重视就是

778
00:34:26.075 --> 00:34:28.605
它比较符合我们人类真正学习的情境

779
00:34:28.605 --> 00:34:31.645
它比较符合我们人类真正学习的情境

780
00:34:31.645 --> 00:34:35.015
这是你在学校裡面的学习，老师告诉你一个问题的答案；

781
00:34:35.015 --> 00:34:37.015
这是在真实社会中的学习，你没有一个正确的答案，

782
00:34:37.015 --> 00:34:38.155
你只有知道，你做的好还是做得不好

783
00:34:38.155 --> 00:34:41.175
如果机器可以做到reinforcement learning，

784
00:34:41.175 --> 00:34:44.445
那它确实是比较intelligent。

785
00:34:44.445 --> 00:34:47.475
又或者我们用AlphaGo来当做例子

786
00:34:47.475 --> 00:34:50.355
下围棋来当作例子，

787
00:34:50.355 --> 00:34:51.615
supervised learning就是告诉机器说，

788
00:34:51.615 --> 00:34:54.795
看到这个盘势你就下5-5，看到这个盘势你就下3-3

789
00:34:54.795 --> 00:34:57.885
reinforcement learning就是会跟对手互下

790
00:34:57.885 --> 00:35:00.755
reinforcement learning就是会跟对手互下

791
00:35:00.755 --> 00:35:03.695
下了好几百手后，最后赢了

792
00:35:03.695 --> 00:35:06.565
还知道说这一局棋下的不错

793
00:35:06.565 --> 00:35:07.875
但到底哪一步是关键的位置让它可以赢?

794
00:35:07.875 --> 00:35:10.445
但到底哪一步是关键的位置让它可以赢?

795
00:35:10.445 --> 00:35:12.095
它其实不知道，

796
00:35:12.095 --> 00:35:14.985
它只知道赢了，或者是输了

797
00:35:14.985 --> 00:35:15.925
我们知道说AlphaGo其实是用supervised learning

798
00:35:15.925 --> 00:35:18.925
我们知道说AlphaGo其实是用supervised learning

799
00:35:18.925 --> 00:35:22.085
加上reinforcement learning的方法去学的

800
00:35:22.085 --> 00:35:24.905
机器先从棋谱，棋谱就是它的老师，

801
00:35:24.905 --> 00:35:27.845
有棋谱就可以做supervised 的学习

802
00:35:27.845 --> 00:35:30.695
但棋谱没有很多，所以从棋谱做了supervised 的学习以后

803
00:35:30.695 --> 00:35:33.915
接下来它会做reinforcement learning

804
00:35:33.915 --> 00:35:36.845
让它学得更好

805
00:35:36.845 --> 00:35:40.005
但是reinforcement learning需要一个对手

806
00:35:40.005 --> 00:35:42.925
你说让人来当对手太慢了，人又没有办法跟机器下很多盘棋

807
00:35:42.925 --> 00:35:46.095
所以机器的对手是另外一个机器

808
00:35:46.095 --> 00:35:49.325
大家都知道说AlphaGo就是自己跟自己下棋，

809
00:35:49.325 --> 00:35:50.375
然后不断的进步

810
00:35:50.375 --> 00:35:53.035
指的就是在reinforcement learning的这个步骤，

811
00:35:53.035 --> 00:35:53.800
机器不是跟人下棋，

812
00:35:53.800 --> 00:35:55.785
它的对手是另外一个机器。

813
00:35:55.785 --> 00:35:59.865
它的对手是另外一个机器。

814
00:35:59.865 --> 00:36:01.125
最后在这个图上

815
00:36:01.125 --> 00:36:02.345
最后在这个图上

816
00:36:02.345 --> 00:36:05.365
大家注意一下不同的方块，

817
00:36:05.365 --> 00:36:09.225
我是用不同的颜色来表示。

818
00:36:09.225 --> 00:36:12.645
同样的颜色代表今天这个不同的方块

819
00:36:12.645 --> 00:36:16.145
指的是同一个类型的事情。

820
00:36:16.145 --> 00:36:18.365
这边的蓝色方块指的是scenario

821
00:36:18.365 --> 00:36:21.395
这边的蓝色方块指的是scenario

822
00:36:21.395 --> 00:36:24.285
指的是学习的情境

823
00:36:24.285 --> 00:36:27.695
通常学习的情境是你自己没有办法控制的

824
00:36:27.695 --> 00:36:30.775
举例来说，为甚麽我们要用reinforcement learning

825
00:36:30.775 --> 00:36:33.445
就是我们没有data做supervised learning

826
00:36:33.445 --> 00:36:35.945
所以我们才做reinforcement learning

827
00:36:35.945 --> 00:36:39.035
我知道reinforcement learning听起来很潮，因为它用在AlphaGO裡面

828
00:36:39.035 --> 00:36:42.055
所以现在甚麽样的task你有用到reinforcement learning

829
00:36:42.055 --> 00:36:45.235
你就可以到处乱讲说:

830
00:36:45.235 --> 00:36:48.645
"这个AlphaGo is chip；AlphaGo is dialogue"

831
00:36:48.645 --> 00:36:54.725
其实就是用了reinforcement learning的技术就说AlphaGo is 甚麽东西

832
00:36:54.725 --> 00:36:57.705
所以就会变成好像要用reinforcement learning比较潮

833
00:36:57.705 --> 00:37:00.735
所以之前比如说有学生去面试，那个公司就问，

834
00:37:00.735 --> 00:37:03.720
人家问他说你做甚麽，他说我做的是一个supervised learning 的task

835
00:37:03.720 --> 00:37:07.285
人家说: "你怎麽不做reinforcement learning呢?reinforcement learning就是比较厉害啊"

836
00:37:07.285 --> 00:37:09.365
这个时候你就应该要呛爆他说:

837
00:37:09.365 --> 00:37:11.935
如果我今天可以做supervised learning的task，

838
00:37:11.935 --> 00:37:15.025
我其实就不应该做reinforcement learning的task

839
00:37:15.025 --> 00:37:18.465
reinforcement learning是

840
00:37:18.465 --> 00:37:21.135
我们没有办法做supervised learning 的task的时候，

841
00:37:21.135 --> 00:37:23.875
我们才做reinforcement learning。

842
00:37:23.875 --> 00:37:27.875
不过你面试若这样讲，你大概就不会被录取就是了

843
00:37:27.875 --> 00:37:31.085
所以这些是不同的scenario

844
00:37:31.085 --> 00:37:32.655
不同的scenario通常不是你自己可以控制的

845
00:37:32.655 --> 00:37:34.235
看你手上有什麽样的data，

846
00:37:34.235 --> 00:37:37.825
决定你有甚麽样的scenario。

847
00:37:37.825 --> 00:37:39.515
那红色的呢?

848
00:37:39.515 --> 00:37:42.595
红色的是指你的task，

849
00:37:42.595 --> 00:37:44.015
你要解的问题

850
00:37:44.015 --> 00:37:45.745
那你要解的这个问题，

851
00:37:45.745 --> 00:37:48.005
随著你要找的function的output不同

852
00:37:48.005 --> 00:37:51.045
有regression，有classification，有structured learning

853
00:37:51.045 --> 00:37:53.155
structured learning你就想成不是regression，不是classification的问题就是structured learning，

854
00:37:53.155 --> 00:37:56.605
structured learning你就想成不是regression，不是classification的问题就是structured learning，

855
00:37:56.605 --> 00:37:58.125
简单这样想就好了!

856
00:37:58.125 --> 00:38:01.175
所以今天在不同的情境下，

857
00:38:01.175 --> 00:38:04.385
你都可能要解这个task，

858
00:38:04.385 --> 00:38:07.715
解这个task

859
00:38:07.715 --> 00:38:09.325
如果今天在supervised类的情况下你有这些task，

860
00:38:09.325 --> 00:38:11.125
但是在semi-supervised learning, transfer learning, unsupervised learning和reinforcement learning的情况下

861
00:38:11.125 --> 00:38:14.155
但是在semi-supervised learning, transfer learning, unsupervised learning和reinforcement learning的情况下。

862
00:38:14.155 --> 00:38:20.125
你也都需要去解这些的task

863
00:38:20.125 --> 00:38:21.655
最后在这些task裡面都有不同的model

864
00:38:21.655 --> 00:38:23.275
最后在这些task裡面都有不同的model

865
00:38:23.275 --> 00:38:25.285
或者是不同的方法。

866
00:38:25.285 --> 00:38:28.845
这边用绿色的方块表示

867
00:38:28.845 --> 00:38:31.985
他这边的意思是说，同样的task，

868
00:38:31.985 --> 00:38:35.085
我们用不同的方法来解它。

869
00:38:35.085 --> 00:38:39.105
所以今天supervised learning它画得比较大块，

870
00:38:39.105 --> 00:38:41.525
这个裡面的东西在这四个task裡面也都有出现

871
00:38:41.525 --> 00:38:44.585
这个裡面的东西在这四个task裡面也都有出现，

872
00:38:44.585 --> 00:38:46.825
classification画得比较大块，它裡面绿色的这些box，在这些红色的box裡面都有出现。

873
00:38:46.825 --> 00:38:50.235
classification画得比较大块，它裡面绿色的这些box，在这些红色的box裡面都有出现。

874
00:38:50.235 --> 00:38:53.685
希望大家可以了解这些machine learning不同的技术，

875
00:38:53.685 --> 00:38:54.685
他们之间的关联性。

876
00:38:54.685 --> 00:38:56.685
台湾大学人工智慧中心
科技部人工智慧技术暨全幅健康照护联合研究中心
http://aintu.tw

